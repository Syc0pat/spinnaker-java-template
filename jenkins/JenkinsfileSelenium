pipeline {
    agent {
        docker {
            image 'maven:3.8.1-adoptopenjdk-11' 
            args '-v /root/.m2:/root/.m2' 
        }
    }
    stages {
        stage('Maven Test Windows-Edge') {
          environment {
            BROWSER = 'edge'
            PLATFORM = 'windows'
            ARCHITECTURE = '64-bit' 					    
            DRIVER-PATH = 'C:/SeleniumDrivers/edgedriver_win64/msedgedriver.exe'
          }
          steps {
            echo 'Performing Test on Win-64-Edge...'
            sh 'mvn clean compile test -Dbrowser=${BROWSER} -Dplatform=${PLATFORM} -Darchitecture=${ARCH}' -DdriverPath=${DRIVER-PATH}	
          }
        }
        stage('Maven Test Windows-Chrome') {
          environment {
            BROWSER = 'chrome'
            PLATFORM = 'windows'
            ARCHITECTURE = '64-bit' 					    
            DRIVER-PATH = 'C:/SeleniumDrivers/chromedriver_win32/chromedriver.exe'
          }
          steps {
            echo 'Performing Test on Win-64-Chrome...'
            sh 'mvn clean compile test -Dbrowser=${BROWSER} -Dplatform=${PLATFORM} -Darchitecture=${ARCH}' -DdriverPath=${DRIVER-PATH}	
          }
        }
        stage('Maven Test Windows-Firefox') {
          environment {
            BROWSER = 'firefox'
            PLATFORM = 'windows'
            ARCHITECTURE = '64-bit' 					    
            DRIVER-PATH = 'C:/SeleniumDrivers/geckodriver-v0.29.1-win64/geckodriver.exe'
          }
          steps {
            echo 'Performing Test on Win-64-Firefox...'
            sh 'mvn clean compile test -Dbrowser=${BROWSER} -Dplatform=${PLATFORM} -Darchitecture=${ARCH}' -DdriverPath=${DRIVER-PATH}	
          }
        }
        stage('Maven Test Windows-Opera') {
          environment {
            BROWSER = 'opera'
            PLATFORM = 'windows'
            ARCHITECTURE = '64-bit' 					    
            DRIVER-PATH = 'C:/SeleniumDrivers/operadriver_win64/operadriver.exe'
          }
          steps {
            echo 'Performing Test on Win-64-Opera...'
            sh 'mvn clean compile test -Dbrowser=${BROWSER} -Dplatform=${PLATFORM} -Darchitecture=${ARCH}' -DdriverPath=${DRIVER-PATH}	
          }
        }
//        ...
//        ...
//        // REPEAT FOR Linux-64-BROWSERS
//        // REPEAT FOR Mac-64-BROWSERS (including Safari)
//        ...
//        ...
    }
}






// ------ MATRIX FORMAT --------

//stages {
//  stage('Matrix Stage') {
//	  matrix {
//      axes {
//	 	    axis {
//          name 'PLATFORM'
//	 		    values 'linux', 'mac', 'windows'
//	      }
//		    axis {
//		      name 'BROWSER'
//   	 	    values 'chrome', 'edge', 'firefox', 'opera',  'safari'
//		    }
//		    axis {
//	        name 'ARCHITECTURE'
//			    values '32-bit', '64-bit'
//		    }
//	    }
//		  excludes {
//		    exclude {
//			    axis {
//		        name 'ARCHITECTURE'
//			      values '32-bit'
//	   	 	  }
//		    }  
//	    }
//		  stages {
//		    stage('Maven Test') {
//			    agent {
//				    docker {
//				      image 'myregistry.com/${PLATFORM-BROWER-ARCHITECTURE}-image'
//				      label '${PLATFORM-BROWER-ARCHITECTURE}'
//				    }
//			    }
//	  		  steps {
//            echo "Do Test for ${PLATFORM} - ${BROWSER} - ${ARCHITECTURE}"
//            sh 'mvn clean compile test'
//	     	  }
//		    }
//	    }
//	  }
//	}	     
//}



// ----- XTRAS -----

//            script {
//              def browsers = ['chrome', 'firefox']
//              for (int i = 0; i < browsers.size(); ++i) {
//                echo "Testing the ${browsers[i]} browser"
//              }
//            }
